Выполнил все 5 заданий не зависимо от того, что было указано:
- в задании №2 - вместо задачи 1
- в задании №4 - вместо задачи 3

В задачах 3 и 4 был вопрос "Как поступить, если потребуется сортировка по ключам?"
Попробовал сортировать весь словарь функцией Sorted(), тогда получается что весь словарь становится списком
с вложенными словарями.
Применять функцию Sorted() для сортировки всего словаря не стал. Так как по заданию функция должна возвращать словарь.
Пошел по другому пути (может конечно и тяжелый код получился, но в программировании новичок, поэтому еще много не знаю).
В функции предусмотрел именованные параметры sorting - включение сортировки, sorting_direction - сортировка по
убыванию или возрастанию.
В задании №3 выделил из словаря ключи, потом отсортировал их. Составил словарь по отсортированным ключам.
Возврат словаря функцией осуществляется в зависимости от параметра sorting (включена сортировка или нет).
В задании №4 для ключей по первой букве фамилии пошел по тому же принципу как в задании №3.
Для сортировки ключей по первой букве имени сортировку сделал при составлении словаря. Поэтому словарь с ключами
по первым буквам имени всегда сортируется в зависимости от значения sorting_direction, не зависимо, от значения
sorting (в заданиях про это ничего не сказано, поэтому ошибкой это считать не стал).

В задании №5 применил именованные параметры flag - для запрета повторения слов (как указано в задании), n - для задания
необходимого количества шуток.
Запрет повторения слов в шутках применил метод .remove. Так как в списках только 5 элементов при "n" больше пяти
выскакивала ошибка. Чтобы этого избежать, сделал при запрете повторения слов и n больше длины самого
короткого списка, чтобы n присваивалось значение длины самого короткого списка.
